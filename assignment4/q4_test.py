# -*- coding: utf-8 -*-
"""Q4_test.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1dUjXq9nEOX2PMOboEnFAB_-x-hQGM49x
"""

import numpy as np
import matplotlib.pyplot as plt
from preprocessing.polynomial_features import PolynomialFeatures
from linearRegression.linear_regression import LinearRegression
import pandas as pd
import os.path
from os import path
np.random.seed(45)  #Setting seed for reproducibility

if not path.exists('Plots/Question4/'):
  os.makedirs('Plots/Question4/')

x = np.array([i*np.pi/180 for i in range(60,300,2)])
y = 3*x + 8 + np.random.normal(0,3,len(x))

#Preprocess the input using the polynomial features
#Solve the resulting linear regression problem by calling any one of the 
#algorithms you have implemented.
degrees=[1,3,5,7,9]
theta_norms=[]

for degree in degrees:
  PF = PolynomialFeatures(degree=degree)
  X = PF.transform(x)

  LR = LinearRegression(fit_intercept=True)
  LR.fit_normal_equations(pd.DataFrame(X), y)

  theta_norm=np.sqrt(np.square(LR.intercept_)+np.sum(np.square(LR.coef_)))
  theta_norms.append(theta_norm)

plt.plot(degrees,theta_norms)
plt.xlabel('Degrees')
plt.ylabel('Theta Norm')
plt.show()