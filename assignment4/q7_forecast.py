# -*- coding: utf-8 -*-
"""Q7_forecast.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1QygJyzTuf4wJ3ioxCqF0boFIbPNbBJd6
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
from metrics import rmse
from sklearn.model_selection import train_test_split
from linearRegression.linear_regression import LinearRegression
from preprocessing.polynomial_features import PolynomialFeatures

df=pd.read_csv("/home/divyanshu/Documents/Academics/Sem8/Machine Learning/Assignment4/daily-min-temperatures.csv")

df['Date']= pd.to_datetime(df['Date'])
df['T-1'] = df['Temp'].shift(1)
df['T-2'] = df['Temp'].shift(2)
df['T-3'] = df['Temp'].shift(3)
df['T-4'] = df['Temp'].shift(4)
df['T-5'] = df['Temp'].shift(5)
df['T-6'] = df['Temp'].shift(6)

X=df[df.columns[2:]].iloc[6:].reset_index(drop=True)
X=pd.DataFrame(X)
y=df['Temp'].iloc[6:]
y=y.values

X_train, X_test, y_train, y_test = train_test_split( X, y, test_size=0.2, random_state=42, shuffle=False)
LR = LinearRegression(fit_intercept=True)
LR.fit_normal_equations(X_train, y_train)
y_hat=LR.predict(X_test)
print(LR.coef_)
rmse_ = rmse(pd.Series(y_hat), pd.Series(y))
print(rmse_)

legend_arr=["y_true = o","y_predicted = +"]
plt.plot(y_hat, 'bo')
plt.plot(y_test, 'r+')
plt.legend(legend_arr)
plt.xlabel("Data points")
plt.ylabel("Temperature")
plt.show()

